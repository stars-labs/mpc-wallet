{
  "id": "405e31a1-d31c-405a-9bfa-8fc7dd6030f7",
  "title": "Project File Structure Guide",
  "details": "## MPC Wallet Project File Structure & Key Locations\n\n### Core Source Files (`src/`)\n\n#### Entry Points\n- **`entrypoints/background/`**: Extension background scripts\n  - `index.ts`: Main background script coordinator\n  - `sessionManager.ts`: MPC session lifecycle management\n  - `websocket.ts`: WebSocket signaling client\n  - `messageHandlers.ts`: Inter-context message routing\n  - `stateManager.ts`: Global application state\n\n- **`entrypoints/offscreen/`**: Offscreen document for heavy operations\n  - `webrtc.ts`: **CORE FILE** - WebRTC manager & FROST DKG coordinator\n  - `index.ts`: Offscreen document main entry\n  - `meshManager.ts`: P2P mesh network management\n  - `dkgManager.ts`: DKG process coordination\n\n- **`entrypoints/popup/`**: User interface components\n  - `index.ts`: Main popup entry point\n  - Svelte components for UI\n\n- **`entrypoints/content/`**: Content script injection\n  - `provider.ts`: Web3 provider implementation\n\n#### Type Definitions (`types/`)\n- **`websocket.ts`**: WebSocket & WebRTC signaling types ⭐ **CURRENT FILE**\n- `session.ts`: Session management types\n- `dkg.ts`: DKG process and state types\n- `messages.ts`: Inter-context message types\n- `webrtc.ts`: WebRTC connection types\n- `appstate.ts`: Global application state types\n\n#### Services (`services/`)\n- `accountService.ts`: Account management logic\n- `networkService.ts`: Blockchain network handling\n- `walletClient.ts`: Wallet operations interface\n- `walletController.ts`: Main wallet controller\n\n### Build & Configuration\n- **`Cargo.toml`**: Rust WASM module configuration\n- **`wxt.config.ts`**: WXT extension build configuration\n- **`flake.nix`**: NixOS development environment\n- **`package.json`**: Node.js dependencies and scripts\n- **`tsconfig.json`**: TypeScript compiler configuration\n\n### Generated/Compiled Files\n- **`pkg/`**: Compiled WASM modules from Rust\n  - `mpc_wallet.js`: WASM JavaScript bindings\n  - `mpc_wallet_bg.wasm`: FROST DKG WebAssembly module\n  - Type definitions for WASM exports\n\n### Documentation (`docs/`)\n- `DKG_TEST_GUIDE.md`: Testing procedures and implementation details\n- `DEVELOPMENT.md`: Development setup instructions\n- `DKG_ADDRESS_UI_IMPLEMENTATION.md`: UI integration documentation\n\n### Tests\n- **`src/entrypoints/offscreen/webrtc.test.ts`**: Main WebRTC/DKG tests\n- **`src/entrypoints/offscreen/webrtc.dkg.test.ts`**: DKG-specific tests\n- **`src/entrypoints/offscreen/webrtc.errors.test.ts`**: Error scenario tests\n- Service-level unit tests throughout `services/`\n\n### Key Integration Points\n- **WebSocket ↔ WebRTC**: Signaling server coordination\n- **Background ↔ Offscreen**: Session management communication\n- **Popup ↔ Background**: User interaction handling\n- **Content ↔ Background**: Web3 provider injection\n- **WASM ↔ TypeScript**: FROST DKG operations",
  "category": "file_structure",
  "dateCreated": "2025-06-13T11:00:08.244Z",
  "dateUpdated": "2025-06-13T11:00:08.244Z"
}