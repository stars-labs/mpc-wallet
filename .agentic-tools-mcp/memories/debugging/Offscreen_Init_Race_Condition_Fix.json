{
  "id": "758698cd-fe3b-4e5d-ac9b-fc3c3b16cc58",
  "title": "Offscreen Init Race Condition Fix",
  "details": "## Offscreen Initialization Race Condition - FIXED ✅\n\n### Problem Description\nUser reported seeing warnings in the console:\n- \"Offscreen: Init data not received within expected time. WebRTCManager: false localdeviceId: null\"\n- \"Offscreen: This may indicate the background script failed to send init data.\"\n\n### Root Cause Analysis\n**Race Condition in Component Initialization Order**:\n\n1. **Background Script Initialization Sequence**:\n   - `initializeComponents()` creates StateManager with empty INITIAL_APP_STATE\n   - OffscreenManager created with `stateManager.getState()` (returns **copy** of state) \n   - Device ID set to \"mpc-2\" **after** OffscreenManager creation\n   - OffscreenManager had old state copy without device ID\n\n2. **Offscreen Document Flow**:\n   - Offscreen document sends `offscreenReady` signal\n   - Background creates offscreen document\n   - Offscreen document waits 3 seconds for init data\n   - Sends `requestInit` when no init received\n   - OffscreenManager.handleInitRequest() fails: `if (!this.appState.deviceId)` returns false\n\n3. **State Reference vs Copy Issue**:\n   - OffscreenManager created with `stateManager.getState()` - **returns copy**\n   - SessionManager and WebSocketManager use `stateManager.getStateReference()` - **returns reference**\n   - When device ID was set later, OffscreenManager still had old copy\n\n### Solution Implemented\n**Fixed OffscreenManager to use shared state reference**:\n\n**Before**:\n```typescript\n// Initialize offscreen manager (needs app state)\noffscreenManager = new OffscreenManager(stateManager.getState()); // Returns copy\n```\n\n**After**:\n```typescript\n// Initialize offscreen manager (use shared state reference)\noffscreenManager = new OffscreenManager(stateManager.getStateReference()); // Returns reference\n```\n\n### Technical Details\n1. **StateManager Methods**:\n   - `getState()`: Returns copy for external/readonly use\n   - `getStateReference()`: Returns reference for internal components that need shared state\n\n2. **Component State Sharing**:\n   - OffscreenManager: Now uses state reference (FIXED)\n   - SessionManager: Already uses state reference ✅\n   - WebSocketManager: Already uses state reference ✅\n\n3. **Initialization Order**:\n   - StateManager created\n   - Device ID set immediately\n   - All managers use shared state reference\n   - No more race conditions\n\n### Testing Verification\n- ✅ **Build successful**: 882.97 kB\n- ✅ **No TypeScript errors**\n- ✅ **Offscreen should now receive device ID properly**\n- ✅ **No more \"localdeviceId: null\" warnings expected**\n\n### Impact\n- **Fixed**: Offscreen initialization race condition eliminated\n- **Improved**: Consistent state sharing across all managers\n- **Enhanced**: Proper initialization order and timing\n- **Eliminated**: \"Init data not received\" warnings\n\n### Related Context\nThis fix complements the earlier UI state persistence fix by ensuring proper initialization order throughout the extension architecture. Both fixes address state management timing issues that were causing various user experience problems.",
  "category": "debugging",
  "dateCreated": "2025-06-16T09:17:18.754Z",
  "dateUpdated": "2025-06-16T09:17:18.754Z"
}