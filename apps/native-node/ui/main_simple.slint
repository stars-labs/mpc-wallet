import { Button, VerticalBox, HorizontalBox, LineEdit, TextEdit, ListView, StandardButton, GroupBox, GridBox, ComboBox, TabWidget, ScrollView } from "std-widgets.slint";

// Define a global singleton for reactive state
export global AppState {
    in-out property <bool> websocket-connected: false;
    in-out property <string> device-id: "";
    in-out property <string> session-status: "No active session";
    in-out property <string> generated-address: "";
    in-out property <[string]> log-messages: [];
    in-out property <[SessionInvite]> session-invites: [];
}

// Struct for session invitations
export struct SessionInvite {
    session_id: string,
    from_device: string,
}

// Main application window using global state
export component MainWindow inherits Window {
    title: "MPC Wallet - Native Node";
    min-width: 1200px;
    min-height: 800px;
    background: #1A1A2E;
    
    // Callbacks
    callback connect-websocket(string);
    callback create-session(string, int, int);
    callback accept-session(string);
    callback reject-session(string);
    callback start-dkg();
    callback initiate-signing(string, string);
    
    VerticalBox {
        padding: 20px;
        spacing: 20px;
        
        // Header
        Rectangle {
            height: 80px;
            background: #16213E;
            border-radius: 10px;
            
            HorizontalBox {
                padding: 20px;
                spacing: 24px;
                
                Text {
                    text: "MPC Wallet";
                    color: white;
                    font-size: 32px;
                    font-weight: 700;
                    vertical-alignment: center;
                }
                
                Rectangle { }  // Spacer
                
                // Connection Status
                Rectangle {
                    width: 200px;
                    height: 40px;
                    background: AppState.websocket-connected ? #0F3460 : #2C2C2C;
                    border-radius: 8px;
                    
                    HorizontalBox {
                        padding: 10px;
                        spacing: 8px;
                        
                        Rectangle {
                            width: 12px;
                            height: 12px;
                            background: AppState.websocket-connected ? #4CAF50 : #FF5252;
                            border-radius: 6px;
                        }
                        
                        Text {
                            text: AppState.websocket-connected ? "Connected" : "Disconnected";
                            color: white;
                            font-size: 14px;
                            vertical-alignment: center;
                        }
                    }
                }
            }
        }
        
        // Main Content
        HorizontalBox {
            spacing: 20px;
            
            // Left Panel
            VerticalBox {
                width: 400px;
                spacing: 20px;
                
                // Connection
                GroupBox {
                    title: "Connection";
                    
                    VerticalBox {
                        padding: 20px;
                        spacing: 12px;
                        
                        LineEdit {
                            text <=> AppState.device-id;
                            placeholder-text: "Enter device ID";
                            font-size: 16px;
                        }
                        
                        Button {
                            text: "Connect";
                            primary: true;
                            clicked => {
                                connect-websocket(AppState.device-id);
                            }
                        }
                    }
                }
                
                // Session
                GroupBox {
                    title: "Session";
                    
                    VerticalBox {
                        padding: 20px;
                        spacing: 12px;
                        
                        LineEdit {
                            placeholder-text: "Session ID";
                            text <=> session-id-input;
                        }
                        LineEdit {
                            placeholder-text: "Participants";
                            text <=> participants-input;
                        }
                        LineEdit {
                            placeholder-text: "Threshold";
                            text <=> threshold-input;
                        }
                        
                        Button {
                            text: "Create Session";
                            primary: true;
                            enabled: AppState.websocket-connected;
                            clicked => {
                                create-session(
                                    session-id-input,
                                    round(participants-input.to-float()),
                                    round(threshold-input.to-float())
                                );
                            }
                        }
                        
                        Button {
                            text: "Start DKG";
                            primary: true;
                            enabled: AppState.websocket-connected;
                            clicked => { start-dkg(); }
                        }
                        
                        Text {
                            text: AppState.session-status;
                            color: #E94560;
                            font-size: 14px;
                        }
                    }
                }
                
                // Session Invites
                GroupBox {
                    title: "Session Invites";
                    
                    VerticalBox {
                        padding: 20px;
                        spacing: 12px;
                        
                        ListView {
                            for invite[i] in AppState.session-invites: HorizontalBox {
                                Text { text: "From: " + invite.from_device + " (" + invite.session_id + ")"; }
                                Button { text: "Accept"; clicked => { accept-session(invite.session_id); } }
                                Button { text: "Reject"; clicked => { reject-session(invite.session_id); } }
                            }
                        }
                    }
                }
                
                // Address
                GroupBox {
                    title: "Generated Address";
                    
                    VerticalBox {
                        padding: 20px;
                        
                        Text {
                            text: AppState.generated-address == "" ? "No address yet" : AppState.generated-address;
                            color: AppState.generated-address == "" ? #666666 : white;
                            font-size: 14px;
                            wrap: word-wrap;
                        }
                    }
                }
            }
            
            // Right Panel - Logs
            GroupBox {
                title: "Logs";
                
                ScrollView {
                    ListView {
                        for message in AppState.log-messages: Text {
                            text: message;
                            color: white;
                            font-size: 12px;
                        }
                    }
                }
            }
        }
    }
    
    property <string> session-id-input: "default-session";
    property <string> participants-input: "2";
    property <string> threshold-input: "2";
}
