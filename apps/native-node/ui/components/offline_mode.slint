import { Button, VerticalBox, HorizontalBox, TextEdit } from "std-widgets.slint";

export struct SDCardOperation {
    operation_type: string, // "export", "import"
    data_type: string, // "dkg_round1", "dkg_round2", "signing_request", "signature_share"
    participant: string,
    timestamp: string,
}

export component OfflineMode inherits Rectangle {
    in property <bool> offline_enabled: false;
    in property <bool> sd_card_detected: false;
    in property <[SDCardOperation]> pending_operations: [];
    in property <string> current_phase: "idle"; // "idle", "exporting", "importing", "processing"
    
    callback toggle_offline_mode();
    callback export_to_sd_card(string);
    callback import_from_sd_card();
    callback clear_sd_card();
    
    preferred-height: offline_enabled ? 320px : 60px;
    background: #16213E;
    border-radius: 8px;
    animate preferred-height { duration: 300ms; easing: ease-in-out; }
    
    VerticalBox {
        padding: 16px;
        spacing: 16px;
        
        // Header with toggle
        HorizontalBox {
            spacing: 12px;
            
            // Offline mode toggle
            TouchArea {
                width: 48px;
                height: 24px;
                
                Rectangle {
                    border-radius: 12px;
                    background: offline_enabled ? #10B981 : #475569;
                    
                    Rectangle {
                        x: offline_enabled ? parent.width - 22px : 2px;
                        y: 2px;
                        width: 20px;
                        height: 20px;
                        border-radius: 10px;
                        background: white;
                        
                        animate x { duration: 200ms; easing: ease-in-out; }
                    }
                }
                
                clicked => { toggle_offline_mode(); }
            }
            
            Text {
                text: "Offline Mode";
                color: white;
                font-size: 14px;
                font-weight: 600;
                vertical-alignment: center;
            }
            
            Rectangle { } // Spacer
            
            // SD Card status
            if offline_enabled: HorizontalBox {
                spacing: 8px;
                
                Rectangle {
                    width: 8px;
                    height: 8px;
                    border-radius: 4px;
                    background: sd_card_detected ? #10B981 : #EF4444;
                    vertical-alignment: center;
                }
                
                Text {
                    text: sd_card_detected ? "SD Card Ready" : "No SD Card";
                    color: sd_card_detected ? #10B981 : #EF4444;
                    font-size: 12px;
                    vertical-alignment: center;
                }
            }
        }
        
        if offline_enabled: VerticalBox {
            spacing: 16px;
            
            // Instructions
            Rectangle {
                padding: 12px;
                border-radius: 6px;
                background: #0F172A;
                
                Text {
                    text: "In offline mode, all network connections are disabled. Use SD card to exchange data between participants.";
                    color: #94A3B8;
                    font-size: 12px;
                    wrap: word-wrap;
                }
            }
            
            // SD Card operations
            VerticalBox {
                spacing: 12px;
                
                Text {
                    text: "SD Card Operations";
                    color: #94A3B8;
                    font-size: 13px;
                    font-weight: 500;
                }
                
                HorizontalBox {
                    spacing: 8px;
                    
                    Button {
                        text: "Export Data";
                        enabled: sd_card_detected && pending_operations.length > 0;
                        clicked => { export_to_sd_card("all"); }
                    }
                    
                    Button {
                        text: "Import Data";
                        enabled: sd_card_detected;
                        clicked => { import_from_sd_card(); }
                    }
                    
                    Button {
                        text: "Clear SD Card";
                        enabled: sd_card_detected;
                        clicked => { clear_sd_card(); }
                    }
                }
            }
            
            // Pending operations
            if pending_operations.length > 0: VerticalBox {
                spacing: 8px;
                
                Text {
                    text: "Pending Operations (" + pending_operations.length + ")";
                    color: #94A3B8;
                    font-size: 13px;
                    font-weight: 500;
                }
                
                Rectangle {
                    height: 100px;
                    border-radius: 6px;
                    background: #0F172A;
                    
                    VerticalBox {
                        padding: 8px;
                        spacing: 4px;
                        
                        for op in pending_operations.slice(0, 3): HorizontalBox {
                            spacing: 8px;
                            
                            // Operation type icon
                            Text {
                                text: op.operation_type == "export" ? "ðŸ“¤" : "ðŸ“¥";
                                font-size: 12px;
                                vertical-alignment: center;
                            }
                            
                            Text {
                                text: op.data_type + " - " + op.participant;
                                color: #E2E8F0;
                                font-size: 12px;
                                vertical-alignment: center;
                            }
                            
                            Rectangle { } // Spacer
                            
                            Text {
                                text: op.timestamp;
                                color: #64748B;
                                font-size: 11px;
                                vertical-alignment: center;
                            }
                        }
                        
                        if pending_operations.length > 3: Text {
                            text: "... and " + (pending_operations.length - 3) + " more";
                            color: #64748B;
                            font-size: 11px;
                            padding-top: 4px;
                        }
                    }
                }
            }
            
            // Status indicator
            if current_phase != "idle": HorizontalBox {
                spacing: 8px;
                
                // Spinner animation
                Rectangle {
                    width: 16px;
                    height: 16px;
                    
                    Image {
                        source: @image-url("spinner.svg");
                        rotation-angle: 360deg;
                        
                        animate rotation-angle {
                            duration: 1s;
                            loop: true;
                            easing: linear;
                        }
                    }
                }
                
                Text {
                    text: current_phase == "exporting" ? "Exporting to SD card..." :
                          current_phase == "importing" ? "Importing from SD card..." :
                          "Processing data...";
                    color: #3B82F6;
                    font-size: 12px;
                    vertical-alignment: center;
                }
            }
        }
    }
}