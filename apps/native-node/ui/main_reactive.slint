import { Button, VerticalBox, HorizontalBox, LineEdit, TextEdit, ListView, StandardButton, GroupBox, GridBox, ComboBox, TabWidget, ScrollView } from "std-widgets.slint";

// Define a global singleton for reactive state
export global AppState {
    in-out property <bool> websocket-connected: false;
    in-out property <string> device-id: "";
    in-out property <string> session-status: "No active session";
    in-out property <string> generated-address: "";
    in-out property <[string]> log-messages: [];
    in-out property <[string]> pending-signing-requests: [];
}

// Main application window using global state
export component MainWindow inherits Window {
    title: "MPC Wallet - Native Node (Reactive)";
    min-width: 1200px;
    min-height: 800px;
    background: #1A1A2E;
    
    // Callbacks
    callback connect-websocket(string);
    callback create-session(string, int, int);
    callback join-session(string);
    callback start-dkg();
    callback export-keystore();
    callback initiate-signing(string, string);
    callback accept-signing(string);
    
    VerticalBox {
        padding: 0px;
        
        // Header
        Rectangle {
            height: 80px;
            background: #16213E;
            
            HorizontalBox {
                padding: 20px;
                spacing: 24px;
                
                Text {
                    text: "MPC Wallet";
                    color: white;
                    font-size: 32px;
                    font-weight: 700;
                    vertical-alignment: center;
                }
                
                Rectangle { }  // Spacer
                
                Text {
                    text: AppState.session-status;
                    color: #E94560;
                    font-size: 20px;
                    font-weight: 500;
                    vertical-alignment: center;
                }
                
                // Connection Status with reactive binding
                Rectangle {
                    width: 200px;
                    height: 40px;
                    background: AppState.websocket-connected ? #0F3460 : #2C2C2C;
                    border-radius: 8px;
                    
                    HorizontalBox {
                        padding: 8px;
                        spacing: 8px;
                        
                        Rectangle {
                            width: 12px;
                            height: 12px;
                            background: AppState.websocket-connected ? #4CAF50 : #FF5252;
                            border-radius: 6px;
                        }
                        
                        Text {
                            text: AppState.websocket-connected ? "Connected" : "Disconnected";
                            color: white;
                            font-size: 14px;
                            vertical-alignment: center;
                        }
                    }
                }
            }
        }
        
        // Main Content
        HorizontalBox {
            padding: 24px;
            spacing: 24px;
            
            // Left Panel - Connection & Session
            VerticalBox {
                width: 400px;
                spacing: 24px;
                
                GroupBox {
                    title: "Connection";
                    
                    VerticalBox {
                        padding: 12px;
                        spacing: 12px;
                        
                        Text {
                            text: "Device ID:";
                            color: #E94560;
                            font-size: 14px;
                        }
                        
                        LineEdit {
                            text <=> AppState.device-id;
                            placeholder-text: "Enter your device ID";
                            font-size: 16px;
                        }
                        
                        Button {
                            text: "Connect to WebSocket";
                            primary: true;
                            clicked => {
                                connect-websocket(AppState.device-id);
                            }
                        }
                    }
                }
                
                GroupBox {
                    title: "Session Management";
                    
                    VerticalBox {
                        padding: 12px;
                        spacing: 12px;
                        
                        Text {
                            text: "Create New Session:";
                            color: #E94560;
                            font-size: 14px;
                        }
                        
                        property <string> new-session-id: "";
                        
                        LineEdit {
                            text <=> new-session-id;
                            placeholder-text: "Session ID";
                        }
                        
                        HorizontalBox {
                            spacing: 12px;
                            
                            property <int> total-devices: 3;
                            property <int> threshold-devices: 2;
                            
                            LineEdit {
                                text: "3";
                                placeholder-text: "Total";
                                width: 80px;
                                edited => {
                                    parent.total-devices = self.text.to-float() as int;
                                }
                            }
                            
                            LineEdit {
                                text: "2";
                                placeholder-text: "Threshold";
                                width: 80px;
                                edited => {
                                    parent.threshold-devices = self.text.to-float() as int;
                                }
                            }
                            
                            Button {
                                text: "Create";
                                enabled: AppState.websocket-connected;
                                clicked => {
                                    create-session(parent.parent.new-session-id, parent.total-devices, parent.threshold-devices);
                                }
                            }
                        }
                        
                        Rectangle { height: 16px; }
                        
                        Button {
                            text: "Start DKG";
                            primary: true;
                            enabled: AppState.websocket-connected;
                            clicked => { start-dkg(); }
                        }
                    }
                }
                
                GroupBox {
                    title: "Generated Address";
                    
                    VerticalBox {
                        padding: 12px;
                        
                        Text {
                            text: AppState.generated-address == "" ? "No address generated yet" : AppState.generated-address;
                            color: AppState.generated-address == "" ? #666666 : white;
                            font-size: 14px;
                            wrap: word-wrap;
                        }
                    }
                }
            }
            
            // Right Panel - Logs
            GroupBox {
                title: "Activity Log";
                
                ScrollView {
                    ListView {
                        for message in AppState.log-messages: Text {
                            text: message;
                            color: white;
                            font-size: 12px;
                        }
                    }
                }
            }
        }
        
        // Status Bar
        Rectangle {
            height: 40px;
            background: #16213E;
            
            HorizontalBox {
                padding: 12px;
                
                Text {
                    text: "Status: " + (AppState.websocket-connected ? "Connected" : "Not Connected");
                    color: white;
                    font-size: 12px;
                    vertical-alignment: center;
                }
            }
        }
    }
}